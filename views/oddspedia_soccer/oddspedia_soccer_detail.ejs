<%- include('../include/header_op_detail_soccer') -%>


<% 

// Fonction:

function numAverage(a) {
    var b = a.length,
    c = 0, i;
    for (i = 0; i < b; i++){
        c += Number(a[i]);
    }
    return parseFloat((c/b).toFixed(2));
} 

function dropping_me(odd_arrive, odd_depart){
    return parseFloat(((odd_arrive - odd_depart)/(odd_depart - 1)*100).toFixed(2))
}

function dropping_me_modif(odd_arrive, odd_depart){
    var res = parseFloat(((odd_arrive - odd_depart)/(odd_depart - 1)*100).toFixed(2))

    if(res < 0){
        res = -1
    }
    else if(res > 0){
        res = 1
    }
    else{
        res = 0
    }

    return res;
}

function percent_to_odd(percent){
    return 1 / percent * 100
}

function my_max(tab){
    nb_max = 0
    tab.forEach(element => {
        if(element > nb_max){
            nb_max = element
        }
    });
    return nb_max;
}

function my_min(tab){
    nb_min = 100
    tab.forEach(element => {
        if(element < nb_min && element != 0){
            nb_min = element
        }
    });
    return nb_min;
}

function im_positive(my_number){
    var res;
    if(parseFloat(my_number) > 0){
        res = "table-success";
    }
    else if(parseFloat(my_number) < 0){
        res = "table-danger";
    }
    else if(parseFloat(my_number) < -1 || parseFloat(my_number) > 1){
        res = "table-warning";
    }
    else{
        res = "table-default";
    }
    return res;
}

// Variables:

nb_book = moves_by_book.length
bool_aff_diff = false;

all_opening_1 = []
all_opening_N = []
all_opening_2 = []

all_live_1 = []
all_live_N = []
all_live_2 = []

moves_by_book.forEach(moves_one_book => {

    moves_1 = moves_one_book[1]
    moves_N = moves_one_book[2]
    moves_2 = moves_one_book[3]

    all_opening_1.push(moves_1[0].y)
    all_opening_N.push(moves_N[0].y)
    all_opening_2.push(moves_2[0].y)

    all_live_1.push(moves_1[moves_1.length -1].y)
    all_live_N.push(moves_N[moves_N.length -1].y)
    all_live_2.push(moves_2[moves_2.length -1].y)

});

average_opening_1 = numAverage(all_opening_1)
average_opening_N = numAverage(all_opening_N)
average_opening_2 = numAverage(all_opening_2)

average_live_1 = numAverage(all_live_1)
average_live_N = numAverage(all_live_N)
average_live_2 = numAverage(all_live_2)

max_opening_1 = my_max(all_opening_1),
max_opening_N = my_max(all_opening_N),
max_opening_2 = my_max(all_opening_2),

min_opening_1 = my_min(all_opening_1),
min_opening_N = my_min(all_opening_N),
min_opening_2 = my_min(all_opening_2),

percent_drop_1 = dropping_me(average_live_1, average_opening_1)
percent_drop_N = dropping_me(average_live_N, average_opening_N)
percent_drop_2 = dropping_me(average_live_2, average_opening_2)

if(coteFte.length == 3){
    my_odd_1 = percent_to_odd(coteFte[0])
    my_odd_X = percent_to_odd(coteFte[1])
    my_odd_2 = percent_to_odd(coteFte[2])
    bool_aff_diff = true;
}

if(coteBe.length == 3){
    my_oddBe_1 = percent_to_odd(coteBe[0])
    my_oddBe_X = percent_to_odd(coteBe[1])
    my_oddBe_2 = percent_to_odd(coteBe[2])
    bool_aff_diff = true;
}

%> 
<br>

<h3 style="text-align: center;">AVERAGE ODDS</h3>
<br>
<table class="table table-striped table-bordered border-secondary" data-toggle="table">
    <thead>
        <tr style="text-align: center;">
            <th>Type</th>
            <th>1 </th>
            <th>N </th>
            <th>2 </th>
            <th>Margin </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Oppening odds</td>
            <td>
                <%= average_opening_1 %>
            </td>
            <td>
                <%= average_opening_N %>
            </td>
            <td>
                <%= average_opening_2 %>
            </td>
            <td>
                <%= ((1/average_opening_1 + 1/average_opening_N + 1/average_opening_2)*100-100).toFixed(2) %>
            </td>
        </tr>
        <tr>
            <td>Live odds</td>
            <td>
                <%= average_live_1 %>
            </td>
            <td>
                <%= average_live_N %>
            </td>
            <td>
                <%= average_live_2 %>
            </td>
            <td>
                <%= ((1/average_live_1 + 1/average_live_N + 1/average_live_2)*100-100).toFixed(2) %>
            </td>
        </tr>
        <tr>
            <td>Dropping odds</td>
            <td>
                <%= percent_drop_1 %>%
            </td>
            <td>
                <%= percent_drop_N %>%
            </td>
            <td>
                <%= percent_drop_2 %>%
            </td>
            <td>
                <%= nb_book %>
            </td>
        </tr>
    </tbody>
</table>
<br>



<form action="" method="POST">
    <h5 style="text-align: center">PREDICTION PERCENT</h5>
    <br>
    <h6>BeSoccer</h6>
    <div class="row justify-content-md-center" style="text-align: center">
        <div class="col">
            <input placeholder="Percent 1" type="text" class="form-control" id="coteBe1" name="coteBe1" value=<%
                if(coteBe[0]){ %>"<%= coteBe[0] %>"<%}%>>
        </div>
        <div class="col">
            <input placeholder="Percent N" type="text" class="form-control" id="coteBeX" name="coteBeX" value=<%
                if(coteBe[1]){ %>"<%= coteBe[1] %>"<%}%>>
        </div>
        <div class="col">
            <input placeholder="Percent 2" type="text" class="form-control" id="coteBe2" name="coteBe2" value=<%
                if(coteBe[2]){ %>"<%= coteBe[2] %>"<%}%>>
        </div>
    </div>
    <br>
    <h6>Five Soccer 8</h6>
    <div class="row justify-content-md-center" style="text-align: center">
        <div class="col">
            <input placeholder="Percent 1" type="text" class="form-control" id="cote1" name="cote1" value=<%
                if(coteFte[0]){ %>"<%= coteFte[0] %>"<%}%>>
        </div>
        <div class="col">
            <input placeholder="Percent N" type="text" class="form-control" id="coteX" name="coteX" value=<%
                if(coteFte[1]){ %>"<%= coteFte[1] %>"<%}%>>
        </div>
        <div class="col">
            <input placeholder="Percent 2" type="text" class="form-control" id="cote2" name="cote2" value=<%
                if(coteFte[2]){ %>"<%= coteFte[2] %>"<%}%>>
        </div>
    </div>
    <br>
    <div class="row justify-content-md-center">
        <div class="col col-6 col-md-1">
            <button type="submit" class="btn btn-primary btn-sm">valider</button>
        </div>
    </div>
</form>
<br>

<% if(bool_aff_diff){ %>
        <br>
        <h5 style="text-align: center">OPPENING / PREDICTION</h5>
        <br>
        <div class="row">
            <div class="col-6">
                <h6>BeSoccer</h6>
                <table style="text-align: center;" class="table table-striped table-bordered border-secondary" data-toggle="table">
                    <thead>
                        <tr style="text-align: center;">
                            <th scope="col">Type</th>
                            <th scope="col">1</th>
                            <th scope="col">N</th>
                            <th scope="col">2</th>
                        </tr>
                    </thead>
        
                    <tbody>
                        <tr>
                            <td>Average</td>
                            <td class="<%= im_positive(dropping_me(average_opening_1, my_oddBe_1)) %>" > 
                                <%= dropping_me(average_opening_1, my_oddBe_1) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(average_opening_N, my_oddBe_X)) %>" >
                                <%= dropping_me(average_opening_N, my_oddBe_X) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(average_opening_2, my_oddBe_2)) %>" >
                                <%= dropping_me(average_opening_2, my_oddBe_2) %> %
                            </td>
                        </tr>
                        <tr>
                            <td>Max</td>
                            <td class="<%= im_positive(dropping_me(max_opening_1, my_oddBe_1)) %>" >
                                <%= dropping_me(max_opening_1, my_oddBe_1) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(max_opening_N, my_oddBe_X)) %>">
                                <%= dropping_me(max_opening_N, my_oddBe_X) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(max_opening_2, my_oddBe_2)) %>" >
                                <%= dropping_me(max_opening_2, my_oddBe_2) %> %
                            </td>
                        </tr>
                        <tr>
                            <td>Min</td>
                            <td class="<%= im_positive(dropping_me(min_opening_1, my_oddBe_1)) %>" >
                                <%= dropping_me(min_opening_1, my_oddBe_1) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(min_opening_N, my_oddBe_X)) %>" >
                                <%= dropping_me(min_opening_N, my_oddBe_X) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(min_opening_2, my_oddBe_2)) %>" >
                                <%= dropping_me(min_opening_2, my_oddBe_2) %> %
                            </td>
                        </tr>
                        
                    </tbody>
                </table>
            </div>
            <div class="col-6">
                <h6>Five Soccer 8</h6>
                <table style="text-align: center;" class="table table-striped table-bordered border-secondary" data-toggle="table">
                    <thead>
                        <tr style="text-align: center;">
                            <th scope="col">Type</th>
                            <th scope="col">1</th>
                            <th scope="col">N</th>
                            <th scope="col">2</th>
                        </tr>
                    </thead>
        
                    <tbody>
                        <tr>
                            <td>Average</td>
                            <td class="<%= im_positive(dropping_me(average_opening_1, my_odd_1)) %>" > 
                                <%= dropping_me(average_opening_1, my_odd_1) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(average_opening_N, my_odd_X)) %>" >
                                <%= dropping_me(average_opening_N, my_odd_X) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(average_opening_2, my_odd_2)) %>" >
                                <%= dropping_me(average_opening_2, my_odd_2) %> %
                            </td>
                        </tr>
                        <tr>
                            <td>Max</td>
                            <td class="<%= im_positive(dropping_me(max_opening_1, my_odd_1)) %>" >
                                <%= dropping_me(max_opening_1, my_odd_1) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(max_opening_N, my_odd_X)) %>">
                                <%= dropping_me(max_opening_N, my_odd_X) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(max_opening_2, my_odd_2)) %>" >
                                <%= dropping_me(max_opening_2, my_odd_2) %> %
                            </td>
                        </tr>
                        <tr>
                            <td>Min</td>
                            <td class="<%= im_positive(dropping_me(min_opening_1, my_odd_1)) %>" >
                                <%= dropping_me(min_opening_1, my_odd_1) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(min_opening_N, my_odd_X)) %>" >
                                <%= dropping_me(min_opening_N, my_odd_X) %> %
                            </td>
                            <td class="<%= im_positive(dropping_me(min_opening_2, my_odd_2)) %>" >
                                <%= dropping_me(min_opening_2, my_odd_2) %> %
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <br>

        <div class="row">
            <div class="col-6">

            <h6>[BeSoccer] - [Five Soccer 8]</h6>
            <table style="text-align: center;" class="table table-striped table-bordered border-secondary" data-toggle="table">
                <thead>
                    <tr style="text-align: center;">
                        <th scope="col">Type</th>
                        <th scope="col">1</th>
                        <th scope="col">N</th>
                        <th scope="col">2</th>
                    </tr>
                </thead>
    
                <tbody>
                    <tr>
                        <td>Average</td>
                        <td class="<%= im_positive((dropping_me(average_opening_1, my_oddBe_1) - dropping_me(average_opening_1, my_odd_1)).toFixed(2)) %>">
                            <%= (dropping_me(average_opening_1, my_oddBe_1) - dropping_me(average_opening_1, my_odd_1)).toFixed(2) %> %
                        </td>
                        <td class="<%= im_positive((dropping_me(average_opening_N, my_oddBe_X) - dropping_me(average_opening_N, my_odd_X)).toFixed(2)) %>">
                            <%= (dropping_me(average_opening_N, my_oddBe_X) - dropping_me(average_opening_N, my_odd_X)).toFixed(2) %> %
                        </td>
                        <td class="<%= im_positive((dropping_me(average_opening_2, my_oddBe_2) - dropping_me(average_opening_2, my_odd_2)).toFixed(2)) %>">
                            <%= (dropping_me(average_opening_2, my_oddBe_2) - dropping_me(average_opening_2, my_odd_2)).toFixed(2) %> %
                        </td>
                    </tr>
                    <tr>
                        <td>Max</td>
                        <td class="<%= im_positive((dropping_me(max_opening_1, my_oddBe_1) - dropping_me(max_opening_1, my_odd_1)).toFixed(2)) %>">
                            <%= (dropping_me(max_opening_1, my_oddBe_1) - dropping_me(max_opening_1, my_odd_1)).toFixed(2) %> %
                        </td>
                        <td class="<%= im_positive((dropping_me(max_opening_N, my_oddBe_X) - dropping_me(max_opening_N, my_odd_X)).toFixed(2)) %>">
                            <%= (dropping_me(max_opening_N, my_oddBe_X) - dropping_me(max_opening_N, my_odd_X)).toFixed(2) %> %
                        </td>
                        <td class="<%= im_positive((dropping_me(max_opening_2, my_oddBe_2) - dropping_me(max_opening_2, my_odd_2)).toFixed(2)) %>">
                            <%= (dropping_me(max_opening_2, my_oddBe_2) - dropping_me(max_opening_2, my_odd_2)).toFixed(2) %> %
                        </td>
                    </tr>
                    <tr>
                        <td>Min</td>
                        <td class="<%= im_positive((dropping_me(min_opening_1, my_oddBe_1) - dropping_me(min_opening_1, my_odd_1)).toFixed(2)) %>">
                            <%= (dropping_me(min_opening_1, my_oddBe_1) - dropping_me(min_opening_1, my_odd_1)).toFixed(2) %> %
                        </td>
                        <td class="<%= im_positive((dropping_me(min_opening_N, my_oddBe_X) - dropping_me(min_opening_N, my_odd_X)).toFixed(2)) %>">
                            <%= (dropping_me(min_opening_N, my_oddBe_X) - dropping_me(min_opening_N, my_odd_X)).toFixed(2) %> %
                        </td>
                        <td class="<%= im_positive((dropping_me(min_opening_2, my_oddBe_2) - dropping_me(min_opening_2, my_odd_2)).toFixed(2)) %>">
                            <%= (dropping_me(min_opening_2, my_oddBe_2) - dropping_me(min_opening_2, my_odd_2)).toFixed(2) %> %
                        </td>
                    </tr>
                </tbody>
            </table>            
        </div>
        <% 
            var av1 =
            parseFloat(dropping_me_modif(average_opening_1, my_oddBe_1) * dropping_me_modif(average_opening_1, my_odd_1) + 
            dropping_me_modif(average_opening_N, my_oddBe_X) * dropping_me_modif(max_opening_1, my_odd_1) +
            dropping_me_modif(average_opening_2, my_oddBe_2) * dropping_me_modif(min_opening_1, my_odd_1));

            var avN = 
            parseFloat(dropping_me_modif(average_opening_1, my_oddBe_1) * dropping_me_modif(average_opening_N, my_odd_X) +
            dropping_me_modif(average_opening_N, my_oddBe_X) * dropping_me_modif(max_opening_N, my_odd_X) +
            dropping_me_modif(average_opening_2, my_oddBe_2) * dropping_me_modif(min_opening_N, my_odd_X));

            var av2 = 
            parseFloat(dropping_me_modif(average_opening_1, my_oddBe_1) * dropping_me_modif(average_opening_2, my_odd_2) +
            dropping_me_modif(average_opening_N, my_oddBe_X) * dropping_me_modif(max_opening_2, my_odd_2) +
            dropping_me_modif(average_opening_2, my_oddBe_2) * dropping_me_modif(min_opening_2, my_odd_2));

            var ma1 =
            parseFloat(dropping_me_modif(max_opening_1, my_oddBe_1) * dropping_me_modif(average_opening_1, my_odd_1) + 
            dropping_me_modif(max_opening_N, my_oddBe_X) * dropping_me_modif(max_opening_1, my_odd_1) +
            dropping_me_modif(max_opening_2, my_oddBe_2) * dropping_me_modif(min_opening_1, my_odd_1));

            var maN =
            parseFloat(dropping_me_modif(max_opening_1, my_oddBe_1) * dropping_me_modif(average_opening_N, my_odd_X) + 
            dropping_me_modif(max_opening_N, my_oddBe_X) * dropping_me_modif(max_opening_N, my_odd_X) +
            dropping_me_modif(max_opening_2, my_oddBe_2) * dropping_me_modif(min_opening_N, my_odd_X));

            var ma2 =
            parseFloat(dropping_me_modif(max_opening_1, my_oddBe_1) * dropping_me_modif(average_opening_2, my_odd_2) + 
            dropping_me_modif(max_opening_N, my_oddBe_X) * dropping_me_modif(max_opening_2, my_odd_2) +
            dropping_me_modif(max_opening_2, my_oddBe_2) * dropping_me_modif(min_opening_2, my_odd_2));

            var mi1 =
            parseFloat(dropping_me_modif(min_opening_1, my_oddBe_1) * dropping_me_modif(average_opening_1, my_odd_1) + 
            dropping_me_modif(min_opening_N, my_oddBe_X) * dropping_me_modif(max_opening_1, my_odd_1) +
            dropping_me_modif(min_opening_2, my_oddBe_2) * dropping_me_modif(min_opening_1, my_odd_1));

            var miN =
            parseFloat(dropping_me_modif(min_opening_1, my_oddBe_1) * dropping_me_modif(average_opening_N, my_odd_X) + 
            dropping_me_modif(min_opening_N, my_oddBe_X) * dropping_me_modif(max_opening_N, my_odd_X) +
            dropping_me_modif(min_opening_2, my_oddBe_2) * dropping_me_modif(min_opening_N, my_odd_X));

            var mi2 =
            parseFloat(dropping_me_modif(min_opening_1, my_oddBe_1) * dropping_me_modif(average_opening_2, my_odd_2) + 
            dropping_me_modif(min_opening_N, my_oddBe_X) * dropping_me_modif(max_opening_2, my_odd_2) +
            dropping_me_modif(min_opening_2, my_oddBe_2) * dropping_me_modif(min_opening_2, my_odd_2));
            
            const my_matrice = [[av1,avN,av2],[ma1,maN,ma2],[mi1,miN,mi2]];
            
        %> 
        <div class="col-6">
            <h6>[BeSoccer] * [Five Soccer 8]</h6>
            <table style="text-align: center;" class="table table-striped table-bordered border-secondary" data-toggle="table">
                <thead>
                    <tr style="text-align: center;">
                        <th scope="col">Type</th>
                        <th scope="col">1</th>
                        <th scope="col">N</th>
                        <th scope="col">2</th>
                    </tr>
                </thead>
    
                <tbody>
                    <tr>
                        <td>Average</td>
                        <td class="<%= im_positive(av1) %>" > 
                            <%= av1 %> %
                        </td>
                        <td class="<%= im_positive(avN) %>" >
                            <%= avN %> %
                        </td>
                        <td class="<%= im_positive(av2) %>" >
                            <%= av2 %> %
                        </td>
                    </tr>
                    <tr>
                        <td>Max</td>
                        <td class="<%= im_positive(ma1) %>" >
                            <%= ma1 %> %
                        </td>
                        <td class="<%= im_positive(maN) %>">
                            <%= maN %> %
                        </td>
                        <td class="<%= im_positive(ma2) %>" >
                            <%= ma2 %> %
                        </td>
                    </tr>
                    <tr>
                        <td>Min</td>
                        <td class="<%= im_positive(mi1) %>" >
                            <%= mi1 %> %
                        </td>
                        <td class="<%= im_positive(miN) %>" >
                            <%= miN %> %
                        </td>
                        <td class="<%= im_positive(mi2) %>" >
                            <%= mi2 %> %
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        
        </div>

        
        

        <br>

        <% 
            }; 
        %>

<%- include('../include/footer') -%>