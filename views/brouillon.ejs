data_book.forEach(function(un_book) {

    if (un_book['id'] == 16) {
        name_book = un_book['name']
        bets_book = un_book['bets']
        score_exact_odd = [];

        bets_book.forEach(function(un_bet){

            if (un_bet['id'] == 10) {
                values = un_bet['values']

                values.forEach(function(une_value){
                    score_exact_odd.push([une_value['value'], une_value['odd']])
                })
            }
        })
    }
});

console.log(score_exact_odd);

//-----

/*app.get('/predictions_by_fixture/:id', function(req, res){
    my_id = String(req.params.id);
    var options = {
      method: 'GET',
      url: 'https://api-football-v1.p.rapidapi.com/v3/predictions',
      params: {fixture: my_id},
      headers: {
        'x-rapidapi-host': 'api-football-v1.p.rapidapi.com',
        'x-rapidapi-key': 'c5b77243e3mshe9ba9a33f164ba5p149e4bjsn1c1fdd2bc8f0'
      }
    };
    
    axios.request(options).then(function (response_1) {
  
      var options = {
        method: 'GET',
        url: 'https://api-football-v1.p.rapidapi.com/v3/odds',
        params: {fixture: my_id},
        headers: {
          'x-rapidapi-host': 'api-football-v1.p.rapidapi.com',
          'x-rapidapi-key': 'c5b77243e3mshe9ba9a33f164ba5p149e4bjsn1c1fdd2bc8f0'
        }
      };
      
      axios.request(options).then(function (response_2) {
        //console.log(response_2.data.response[0].bookmakers);
        res.render('predictions_by_fixture', {data_pred: response_1.data.response[0], data_book: response_2.data.response[0].bookmakers});
      }).catch(function (error) {
        console.error(error);
      });
  
    }).catch(function (error) {
      console.error(error);
    });
  });*/ // with odd




  app.get('/predictions_by_fixture/:id', function(req, res){
    my_id = String(req.params.id);
    var options = {
      method: 'GET',
      url: 'https://api-football-v1.p.rapidapi.com/v3/predictions',
      params: {fixture: my_id},
      headers: {
        'x-rapidapi-host': 'api-football-v1.p.rapidapi.com',
        'x-rapidapi-key': 'c5b77243e3mshe9ba9a33f164ba5p149e4bjsn1c1fdd2bc8f0'
      }
    };
    
    axios.request(options).then(function (response_1) {   
      res.render('predictions_by_fixture', {data_pred: response_1.data.response[0], header: 'Pr√©diction'});
    }).catch(function (error) {
      console.error(error);
    });
  });



  //---------------


  <table class="table table-striped table-bordered border-secondary" data-toggle="table">
    <thead>
        <tr>
            <th scope="col" data-sortable="true">Odd use</th>
            <th scope="col" data-sortable="true">1X</th>
            <th scope="col" data-sortable="true">12</th>
            <th scope="col" data-sortable="true">X2</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>
                Average of opening
            </td>
            <td>
                <%= dropping_me(double_chance(average_opening_1, average_opening_X), double_chance(my_odd_1, my_odd_X)) %> 
            </td>
            <td>
                <%= dropping_me(double_chance(average_opening_1, average_opening_2), double_chance(my_odd_1, my_odd_2)) %> 
            </td>
            <td>
                <%= dropping_me(double_chance(average_opening_2, average_opening_X), double_chance(my_odd_2, my_odd_X)) %> 
            </td>
        </tr>
        <tr>
            <td>
                Average of 2nd update
            </td>
            <td>
                <%= dropping_me(double_chance(nd_average_opening_1, nd_average_opening_X), double_chance(my_odd_1, my_odd_X)) %> 
            </td>
            <td>
                <%= dropping_me(double_chance(nd_average_opening_1, nd_average_opening_2), double_chance(my_odd_1, my_odd_2)) %> 
            </td>
            <td>
                <%= dropping_me(double_chance(nd_average_opening_2, nd_average_opening_X), double_chance(my_odd_2, my_odd_X)) %> 
            </td>
        </tr>
        <tr>
            <td>
                Average of last update
            </td>
            <td>
                <%= dropping_me(double_chance(average_drop_1, average_drop_X), double_chance(my_odd_1, my_odd_X)) %> 
            </td>
            <td>
                <%= dropping_me(double_chance(average_drop_1, average_drop_2), double_chance(my_odd_1, my_odd_2)) %> 
            </td>
            <td>
                <%= dropping_me(double_chance(average_drop_2, average_drop_X), double_chance(my_odd_2, my_odd_X)) %> 
            </td>
        </tr>
    </tbody>
</table>
<br>



<td>
  <%= dropping_me(live_1, opening_1) %> %
</td>
<td>
  <%= dropping_me(live_X, opening_X) %> %
</td>
<td>
  <%= dropping_me(live_2, opening_2) %> %
</td>


<br>
        <h5 style="text-align: center">DROP / PREDICTION</h5>
        <br>
        
        <table style="text-align: center;" class="table table-striped table-bordered border-secondary" data-toggle="table">
            <thead>
                <tr>
                    <th scope="col">Type</th>
                    <th scope="col">1</th>
                    <th scope="col">X</th>
                    <th scope="col">2</th>
                </tr>
            </thead>

            <tbody>
                <tr>
                    <td>Average</td>
                    <td>
                        <%= dropping_me(average_drop_1, my_odd_1) %> %
                    </td>
                    <td>
                        <%= dropping_me(average_drop_X, my_odd_X) %> %
                    </td>
                    <td>
                        <%= dropping_me(average_drop_2, my_odd_2) %> %
                    </td>
                </tr>
                <tr>
                    <td>Max</td>
                    <td>
                        <%= dropping_me(max_drop_1, my_odd_1) %> %
                    </td>
                    <td>
                        <%= dropping_me(max_drop_X, my_odd_X) %> %
                    </td>
                    <td>
                        <%= dropping_me(max_drop_2, my_odd_2) %> %
                    </td>
                </tr>
                <tr>
                    <td>Min</td>
                    <td>
                        <%= dropping_me(min_drop_1, my_odd_1) %> %
                    </td>
                    <td>
                        <%= dropping_me(min_drop_X, my_odd_X) %> %
                    </td>
                    <td>
                        <%= dropping_me(min_drop_2, my_odd_2) %> %
                    </td>
                </tr>
            </tbody>
        </table>




        var options = {
            method: 'GET',
            url: ''
          };
          
          axios.request(options).then(function (response) {
        
            //console.log(response.data.data.matchList);
            //res.render('', );
          }).catch(function (error) {
            console.error(error);
          });

///////////////////

          book_offer_id.forEach(offer_id => {

            console.log(offer_id);
            var options = {
              method: 'GET',
              url: 'https://oddspedia.com/api/v1/getOddsMovements?ot=100&matchId='+idMatch+'&inplay=0&wettsteuer=0&geoCode=&geoState=&'+offer_id+'=128709958&language=en'
            };
            
            axios.request(options).then(function (response) {
          
              console.log(response);
              //res.render('', );
            }).catch(function (error) {
              console.error(error);
            });
      
          });